plugins {
    id 'caraml.scala'
    id 'application'
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'com.palantir.docker' version "0.34.0"
    id 'com.github.maiflai.scalatest' version "0.32"
}

ext {
    sparkVersion = '3.1.3'
    scalaVersion = '2.12'
}

repositories {
    mavenCentral()
}

configurations {
    testImplementation.extendsFrom compileOnly
}

dependencies {
    compileOnly "org.apache.spark:spark-sql_$scalaVersion:$sparkVersion"
    testImplementation "org.scalatest:scalatest_$scalaVersion:3.2.2"
    testRuntimeOnly 'com.vladsch.flexmark:flexmark-all:0.35.10'
}

application {
    mainClassName = 'dev.caraml.spark.IngestionJob'
}

shadowJar {
    archiveFileName = "caraml-spark-application-with-dependencies.jar"
    project.configurations.implementation.canBeResolved = true
    configurations = [project.configurations.implementation]
    mergeServiceFiles()
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
}

def containerRegistry = System.getenv('DOCKER_REGISTRY')

docker {
    dependsOn shadowJar
    dockerfile file('docker/Dockerfile')
    files shadowJar.outputs
    name "${containerRegistry == null ? "" : containerRegistry + "/"}${project.name}:${version}"
}

test {
    // Required so that Spark can run on Java 17 during test. Not required when using spark-submit.
    doFirst {
        jvmArgs = [
                "--add-opens=java.base/java.lang=ALL-UNNAMED",
                "--add-opens=java.base/java.lang.invoke=ALL-UNNAMED",
                "--add-opens=java.base/java.lang.reflect=ALL-UNNAMED",
                "--add-opens=java.base/java.io=ALL-UNNAMED",
                "--add-opens=java.base/java.net=ALL-UNNAMED",
                "--add-opens=java.base/java.nio=ALL-UNNAMED",
                "--add-opens=java.base/java.util=ALL-UNNAMED",
                "--add-opens=java.base/java.util.concurrent=ALL-UNNAMED",
                "--add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED",
                "--add-opens=java.base/sun.nio.ch=ALL-UNNAMED",
                "--add-opens=java.base/sun.nio.cs=ALL-UNNAMED",
                "--add-opens=java.base/sun.security.action=ALL-UNNAMED",
                "--add-opens=java.base/sun.util.calendar=ALL-UNNAMED"
        ]
    }
}