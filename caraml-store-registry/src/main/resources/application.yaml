caraml:
  registry:
    # Whether to create/update streaming ingestion jobs on feature table creation/update
    syncIngestionJobOnSpecUpdate: true

  kubernetes:
    # Whether to use in-cluster Kubernetes configuration or default kube config.
    inCluster: false

  monitoring:
    # Configure the behaviour of the timer metrics
    timer:
      # Published percentiles
      percentiles:
        - 0.5
        - 0.95
        - 0.99
      # Minimum expected latency
      minBucketMs: 1
      # Maximum expected latency
      maxBucketMs: 200

  jobService:
    streamingJobs:
      - store: store-name
        namespace: spark-operator
        # Sparkapplication CRD specs. Refer to official documentation for the full range of options supported.
        # Feature schema and source information will be added as flag arguments to the existing list of arguments.
        sparkApplicationSpec:
          driver:
            cores: 2
            memory: 4g
            serviceAccount: spark
            javaOptions: -Dio.netty.tryReflectionSetAccessible=true
          executor:
            cores: 2
            instances: 1
            memory: 6g
            javaOptions: -Dio.netty.tryReflectionSetAccessible=true
          image: "gcr.io/kf-feast/feast-spark:<VERSION>"
          mainApplicationFile: local:///opt/spark/jars/feast-ingestion-spark-v<VERSION>.jar
          mainClass: feast.ingestion.IngestionJob
          mode: cluster
          arguments:
            - --redis
            - '{"host": "localhost", "port": 6379, "password": "<password>", "ssl": false}'
            - --statsd
            - '{"host": "localhost", "port": 8125}'
            - --deadletter-path
            - gs://<gcs-bucket>
            - --stencil-url
            - http://stencil-url
            - --drop-invalid
            - --mode
            - online
            - --checkpoint-path
            - gs://<gcs-bucket>/checkpoints

grpc:
  server:
    port: 6565

spring:
  jpa:
    properties.hibernate:
      format_sql: true
      event:
        merge:
          entity_copy_observer: allow
    hibernate.naming.physical-strategy=org.hibernate.boot.model.naming: PhysicalNamingStrategyStandardImpl
    hibernate.ddl-auto: validate
  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST:127.0.0.1}:${DB_PORT:5432}/${DB_DATABASE:postgres}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
  flyway:
    baseline-on-migrate: true

management:
  endpoints:
    web:
      exposure:
        include: prometheus,health
    metrics:
      enabled: true
